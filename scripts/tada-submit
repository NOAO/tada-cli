#!/bin/bash
# PURPOSE: Submit files to TADA, perhaps with options. Wait for all to complete.
#
# EXAMPLE:
#   tada-submit -o _DTCALDAT=2014-09-21 $HOME/TEXTFILE.txt /data/raw/nhs_2014_n14_299403.fits /data/bok/bokrm.20140425.0119.fits
#
# AUTHORS: S.Pothier

cmd=`basename $0`

#Absolute path to this script
SCRIPT=$(readlink -e $0)
#Absolute path this script is in
SCRIPTPATH=$(dirname $SCRIPT)

PATH=$SCRIPTPATH:$PATH

CLEAR=0
MANIFEST=/var/log/tada/submit.manifest
OPTIONS=""
PROGRESS=0
VERBOSE=0
TIMEOUT=30

usage="USAGE: $cmd [options] file [file ...]
OPTIONS:
  -c :: CLEAR the manifest before submit.  Are you sure?
  -m <manifest>:: Manifest contain success/failure of submits. (default=$MANIFEST)
  -o <options>::  Name=Value (multi allowed)
  -p <progress>:: Number of progress updates per second (default=0)
  -t <seconds>:: Seconds to wait for match to show up in manifest (default=$TIMEOUT)
  -v <verbosity>:: higher number for more output (default=0)

"


while getopts "hcm:o:p:t:v:" opt; do
    #!echo "opt=<$opt>"
    case $opt in
	    h)
            echo "$usage"
            exit 1
            ;;
	    c)
            CLEAR=1
            ;;
        v)
            VERBOSE=$OPTARG
            ;;
        m)
            MANIFEST=$OPTARG
            ;;
        o)
            OPTIONS="$OPTIONS -o $OPTARG"
            ;;
        p)
            PROGRESS=$OPTARG # how often to report progress
            ;;
        t)
            TIMEOUT=$OPTARG
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            exit 1
            ;;
        :)
            echo "Option -$OPTARG requires an argument." >&2
            exit 1
            ;;

    esac
done
#echo "OPTIND=$OPTIND"
for (( x=1; x<$OPTIND; x++ )); do shift; done


RAC=1 # Required Argument Count
if [ $# -lt $RAC ]; then
    echo "Not enough non-option arguments. Expect at least $RAC."
    echo >&2 "$usage"
    exit 2
fi


#!echo "MANIFEST=$MANIFEST"
#!echo "OPTIONS=$OPTIONS"
#!echo "PROGRESS=$PROGRESS"
#!echo "VERBOSE=$VERBOSE"
#!echo "Remaining arguments:"
#!for arg do echo '--> '"\`$arg'" ; done



##############################################################################

if [ "$CLEAR" -eq 1 ]; then
    echo "" > $MANIFEST
fi

strs=""
for file; do
    cmd="lp -d astro $OPTIONS $file"
    if [ $VERBOSE -gt 0 ]; then
	    echo "# Excecuting: $cmd"
    fi
    req=`$cmd`
    echo "# Submit ($req) status: $?"

    id=`echo $req | awk '{ print substr($4,7) }'`
    base=`basename $file`
    ufile=$USER/$id/$base
    strs="$strs $ufile"

    echo "# Submitted: $ufile"
done


if finished-files.sh -t $TIMEOUT -m $MANIFEST  $strs; then
    echo "All submitted files were accounted for."
    exit 0
else
    echo "Some submitted files were NOT accounted for (in $TIMEOUT seconds)!"
    exit 1
fi




